FINAL PROJECT
Nathan Ross
5/9/2019
Description:
Use Django to create a front end environment to add people to our emergency locator list by keeping a record of each person.
Reference: 
Organization: freeCodeCamp.org
Title: Python Django Web Framework - Full Course for Beginners
YouTube URL: https://www.youtube.com/watch?v=F5mRW0jo-U4


WINDOWS POWERSHELL
*******************************************************
pip imports:
(venv) PS C:\Users\Nross\Dev\final_project\venv\src> pip freeze
Django==2.0.7
pytz==2019.1


***********************************************************
********************VIRTUAL ENVIRONMENT********************
***********************************************************


PS C:\Users\Nross\Dev\final_project> cd venv
PS C:\Users\Nross\Dev\final_project\venv> ls


    Directory: C:\Users\Nross\Dev\final_project\venv


Mode                LastWriteTime         Length Name
----                -------------         ------ ----
d-----        4/25/2019   8:46 PM                Include
d-----        4/28/2019   3:55 PM                Lib
d-----        4/28/2019   4:19 PM                Scripts
d-----         5/3/2019   4:35 PM                src
d-----        4/28/2019   3:55 PM                tcl
-a----        3/25/2019   9:31 PM          30195 LICENSE.txt


PS C:\Users\Nross\Dev\final_project\venv> .\Scripts\activate
(venv) PS C:\Users\Nross\Dev\final_project\venv> cd src
(venv) PS C:\Users\Nross\Dev\final_project\venv\src> ls


    Directory: C:\Users\Nross\Dev\final_project\venv\src

	


Mode                LastWriteTime         Length Name
----                -------------         ------ ----
d-----         5/3/2019   3:32 PM                final_python_proj
                                                 ect
d-----         5/3/2019   4:38 PM                personel
-a----         5/3/2019   4:35 PM         143360 db.sqlite3
-a----        4/28/2019   4:22 PM            567 manage.py

*******************CREATE SUPERUSER*********************
(venv) PS C:\Users\Nross\Dev\final_project\venv\src> python manage.py createsuperuser
Username (leave blank to use 'nate'):
Email address: any_email@gmail.com
Password:
Password (again):
Superuser created successfully.
(venv) PS C:\Users\Nross\Dev\final_project\venv\src>

**********************Create APP***********************
(venv) PS C:\Users\Nross\Dev\final_project\venv\src> python manage.
py startapp personel

************MAKE MIGRATIONS*************************
(venv) PS C:\Users\Nross\Dev\final_project\venv\src> python manage.
py makemigrations
(venv) PS C:\Users\Nross\Dev\final_project\venv\src> python manage.
py migrate

**********************************************************
***************RUN SERVER*********************************
-In a separate PowerShell window
PS C:\Users\NRoss> cd C:\Users\Nross\Dev\final_project\venv\src
PS C:\Users\Nross\Dev\final_project\venv\src> python manage.py run
server
Performing system checks...

*******************Login- App Frontend*****************
***************FROM SERVER WEB ADDRESS*****************
*****************http://127.0.0.1:8000*****************
-In a web browswer
-paste address and go: http://127.0.0.1:8000/admin/login/?next=/admin/
-address should take you to a log in screen. 
-log in as superuser with newly create username and password

**********************************************************
***************Websites
http://127.0.0.1:8000/admin/login/?next=/admin/
http://127.0.0.1:8000/admin/
http://127.0.0.1:8000/admin/personel/person/add/
http://127.0.0.1:8000/admin/personel/person/
http://127.0.0.1:8000/admin/personel/person/

**********************Key .py  files********************
# manage.py

#!/usr/bin/env python
import os
import sys

if __name__ == "__main__":
    os.environ.setdefault("DJANGO_SETTINGS_MODULE", "final_python_project.settings")
    try:
        from django.core.management import execute_from_command_line
    except ImportError as exc:
        raise ImportError(
            "Couldn't import Django. Are you sure it's installed and "
            "available on your PYTHONPATH environment variable? Did you "
            "forget to activate a virtual environment?"
        ) from exc
    execute_from_command_line(sys.argv)

***********************************************************************

#settings.py

"""
Django settings for final_python_project project.

Generated by 'django-admin startproject' using Django 2.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'amep-c(0+3yk-b^7zw%6_mpyodd3znrg52(0@*#5erp2mfb%o#'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # third party

    # own
    'personel',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'final_python_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'final_python_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'


*********************************************************************
# apps.py

from django.apps import AppConfig


class PersonelConfig(AppConfig):
    name = 'personel'
	
*****************************************************************
# admin.py

from django.contrib import admin

from .models import Person

admin.site.register(Person)

********************************************************

#models.py

from django.db import models


# Create your models here.
class Person(models.Model):
    first_name = models.CharField(max_length=100)
    last_name = models.CharField(max_length=100)
    date_of_birth = models.CharField(max_length=100)
    email = models.EmailField()
    phone_number = models.CharField(max_length=100)
    address = models.CharField(max_length=600)
    ssn = models.CharField(max_length=100)
    next_of_kin = models.CharField(max_length=100)
    medical_condition = models.CharField(max_length=100)
    allergies = models.CharField(max_length=100)
    blood_type = models.CharField(max_length=100)
    current_location_address = models.CharField(max_length=600)
    current_location_phone_number = models.CharField(max_length=100)
    estimated_duration_of_stay = models.CharField(max_length=100)








